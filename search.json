[
  {
    "objectID": "Slides/introduction.html",
    "href": "Slides/introduction.html",
    "title": "Untitled",
    "section": "",
    "text": "Image 1"
  },
  {
    "objectID": "Slides/introduction.html#what-is-health-economics",
    "href": "Slides/introduction.html#what-is-health-economics",
    "title": "Untitled",
    "section": "What is Health Economics?",
    "text": "What is Health Economics?\nAJ Culyer and Joe Newhouse wrote, in their Introduction to volume 1 of the Handbook of Health Economics that:\n\nHealth economics is commonly regarded as an applied field of economics. “It draws its theoretical inspiration principally from four traditional areas of economics: finance and insurance, industrial organisation, labour and public finance. Some of the most useful work employs only elementary economic concepts but requires detailed knowledge of health technology and institutions. Policy-oriented research plays a major role and many important policy-relevant articles are published in journals read by physicians and other with direct involvement in health” [Fuchs (1987)]. It might also be reasonably claimed, and has been by Blaug (1998), that health economics has contributed more than merely the application of the standard economic and econometric toolkits of economics.\n\nBroadly speaking, one may divide the field of health economics into factors affecting the demand for health or, as we shall see, for health care and those that affect the supply of health or health care. This is, admittedly, a simplified view and ignores many important aspects of health economics including assessments of the value of health and life, which are of the utmost importance when conducting microeconomic appraisals. At the same time, by dividing the field in this way, we can use traditional tools of microeconomic theory to develop new insights into the determinants of health.\nIn this course, we’ll focus on factors that affect healthcare utilization and healthcare spending, which means that we will not be covering large swaths of the health economics literature, including health behaviors, inequality in health and healthcare, and characteristics of the “supply side” of the healthcare market (doctors, hospitals, nurses, etc.).\nHealth economists work in a variety of areas including at insurance companies, hospitals, pharmaceutical companies, federal, state, and local governments, academia, foundations, think tanks, and consulting firms."
  },
  {
    "objectID": "Slides/introduction.html#some-stylized-facts-from-health-economics",
    "href": "Slides/introduction.html#some-stylized-facts-from-health-economics",
    "title": "Untitled",
    "section": "Some stylized facts from health economics",
    "text": "Some stylized facts from health economics\nOne of the universal challenges that everyone faces, and is the foundation of many (if not all) principles of microeconomics courses is that people have to make decisions about what to prioritize because they have unlimited wants, but limited means. The demand for health represents one of the most important unlimited wants, not just because we want to be alive and in “good” health, but also because without health we can’t enjoy anything else. We can see this challenge in things like trends in healthcare spending in the United States (and globally).\n\n\n\nHealth Expenditure and Financing Per Capita\n\n\nThis “American exceptionalism” in healthcare spending is a common finding across data sources on healthcare expenditures. Unfortunately, as the next widget demonstrates, the higher level of healthcare spending per capita does not translate into better health outcomes.\n\n\n\nLife Expectancy at Birth OECD\n\n\nOne of the topics that many health economists study is the degree to which health expenditures actually promote better health outcomes. As we will discuss later in the semester, healthcare spending may, counterintuitively, be a marker of things having gone wrong since healthcare spending measures only one of many ways to invest in one’s health."
  },
  {
    "objectID": "Slides/introduction.html#what-makes-this-course-empirical",
    "href": "Slides/introduction.html#what-makes-this-course-empirical",
    "title": "Untitled",
    "section": "What Makes This Course Empirical?",
    "text": "What Makes This Course Empirical?\nIn the past few decades, there has been a dramatic increase in the amount of data available for study, especially in health and healthcare. However, understanding these data can sometimes require specialized tools or skills. The goal of this course is to develop some of these tools and skills, and show you how to learn new skills or use new tools, as the need arises.\nUsing these skills and tools, you’ll be able to estimate models of healthcare utilization to answer questions like:\n\nHow does healthcare utilization change when prices change?\nWhat personal characteristics are associated with differences in healthcare utilization/spending?\nHow is health insurance associated with healthcare utilization and healthcare spending?"
  },
  {
    "objectID": "Slides/introduction.html#the-role-of-theory",
    "href": "Slides/introduction.html#the-role-of-theory",
    "title": "Untitled",
    "section": "The Role of Theory",
    "text": "The Role of Theory\nDespite the fact that this is an empirical health economics course, we’ll also be developing several important theoretical ideas that will help us interpret our findings. The three key ideas that we develop are:\n\nThe demand for health and the health capital model.\nThe theory of adverse selection.\nThe theory of moral hazard.\n\nThe demand for health will help us as we think about which variables to include in our empirical models and how to interpret those variables. Adverse selection and moral hazard will help us when we interpret the relationship between health insurance and healthcare utilization."
  },
  {
    "objectID": "Slides/introduction.html#what-this-course-is-not",
    "href": "Slides/introduction.html#what-this-course-is-not",
    "title": "Untitled",
    "section": "What This Course is Not",
    "text": "What This Course is Not\nThis course is not a course in econometrics or applied econometrics. We’ll be using"
  },
  {
    "objectID": "Slides/introduction.html#observable-js",
    "href": "Slides/introduction.html#observable-js",
    "title": "Untitled",
    "section": "Observable JS",
    "text": "Observable JS\nThis Quarto document is made interactive using Observable JS. Interactive documents allow readers to modify parameters and see the results immediately. Learn more about OJS interactive documents at https://quarto.org/docs/interactive/ojs/."
  },
  {
    "objectID": "Slides/introduction.html#bubble-chart",
    "href": "Slides/introduction.html#bubble-chart",
    "title": "Untitled",
    "section": "Bubble Chart",
    "text": "Bubble Chart\nThis example uses a D3 bubble chart imported from Observable HQ to analyze commits to GitHub repositories.\nSelect a repository to analyze the commits of:\n\nlibrary(plotly)\n\nLoading required package: ggplot2\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Assuming you have life expectancy data as a CSV file\ndata &lt;- read.csv(\"../Datasets/life-expectancy.csv\")\n\n\n# fig &lt;- plot_ly(\n#   type = 'scatter',\n#   x = data$Year,\n#   y = data$Period.life.expectancy.at.birth...Sex..all...Age..0,\n#   hoverinfo = 'text',\n#   mode = 'markers',\n#   transforms = list(\n#     list(\n#       type = 'filter',\n#       target = 'y',\n#       operation = '&gt;',\n#       value = mean(mtcars$qsec)\n#     )\n#   )\n# )\n# \n# fig\n# \n# g &lt;- ggplot(sd, aes(year, lifeExp, color = country, group = country)) +\n#   geom_line()\n# \n# bscols(widths = c(12, 12),\n#   filter_select(\"country\", \"Country:\", sd, ~ country),\n#   ggplotly(g)\n# )\n# \n# \n# p &lt;- data %&gt;%\n#   filter(Entity == input$countrySelect) %&gt;%\n#   plot_ly(x = ~Year, y = ~Period.life.expectancy.at.birth...Sex..all...Age..0, type = 'scatter', mode = 'lines+markers', text = ~Entity) %&gt;%\n#   layout(title = \"Life Expectancy Over Time\")\n# \n# p\n\n\n\n\nfig&lt;-\n  plot_ly(data=filter(data,Year&gt;1990,Code==\"USA\"),\n          x=~Year,\n          y=~Period.life.expectancy.at.birth...Sex..all...Age..0,\n          type=\"scatter\",\n          mode=\"lines\"\n        )\n\n\n\n\nfig\n\n\n\n\n\n\n# Creating a dropdown menu\n# selectInput(\"countrySelect\", \"Select Country\", choices = unique(data$Country), selected = unique(data$Country)[1])\n\n\nlibrary(plotly)\nlibrary(dplyr)\n\n# Generate a plot with a trace for each country\np &lt;- data %&gt;%\n  group_by(Entity) %&gt;%\n  summarise() %&gt;%\n  plot_ly()\n\n# Add traces for each country\nfor (country in unique(data$Entity)) {\n  p &lt;- p %&gt;%\n    add_trace(\n      data = filter(data, Entity == country),\n      x = ~Year,\n      y = ~Period.life.expectancy.at.birth...Sex..all...Age..0,\n      name = country,\n      type = 'scatter',\n      mode = 'lines+markers'\n    )\n}\n\n# Configure the layout\np &lt;- p %&gt;%\n  layout(\n    title = \"Life Expectancy Over Time by Country\",\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = \"Life Expectancy (years)\"),\n    legend = list(x = 0.1, y = 1.1, orientation = 'h')\n  )\n\n# Render the plot\np\n\n\n\n\n\n\nviewof repo = Inputs.radio(\n  [\n    \"pandas-dev/pandas\",\n    \"tidyverse/ggplot2\",\n  ], \n  { label: \"Repository:\", value: \"pandas-dev/pandas\"}\n)\n\n\n\n\n\n\nFetch the commits for the specified repo using the GitHub API:\n\nd3 = require('d3')\ncontributors = await d3.json(\n  \"https://api.github.com/repos/\" + repo + \"/stats/contributors\"\n)\ncommits = contributors.map(contributor =&gt; {\n  const author = contributor.author;\n  return {\n    name: author.login,\n    title: author.login,\n    group: author.type,\n    value: contributor.total\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote that the repo variable is bound dynamically from the radio input defined above. If you change the input the contributors query will be automatically re-executed.\nView the commits sorted by most to least:\n\nInputs.table(commits, { sort: \"value\", reverse: true })\n\n\n\n\n\n\nVisualize using a D3 bubble chart imported from Observable HQ:\n\nimport { chart } with { commits as data } \n  from \"@d3/d3-bubble-chart\"\nchart"
  },
  {
    "objectID": "Apps/Health_Education_Age.html",
    "href": "Apps/Health_Education_Age.html",
    "title": "The relationship between health, education, and age",
    "section": "",
    "text": "#| standalone: true\n#| viewerHeight: 600\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(jsonify)\nlibrary(ggplot2)\n\n# load the data\ngh_data&lt;-readr::read_csv(\"https://raw.githubusercontent.com/andersen-hecon/empirical_health_econ/main/Datasets/brfss_gh_age.csv\")\n\ngh_levels&lt;-c(\"Excellent\",\n             \"Very Good\",\n             \"Good\",\n             \"Fair\",\n             \"Poor\")\n\n\neduca_levels=c(\n  \"Kindgarten or less\",\n  \"Grades 1-8\",\n  \"Grades 9-11\",\n  \"Less than high school\",\n  \"High school or GED\",\n  \"Some college\",\n  \"College or more\"\n)\n\nage5yr=c(\n  \"18-24\",\n  \"25-29\",\n  \"30-34\",\n  \"35-39\",\n  \"40-44\",\n  \"45-49\",\n  \"50-54\",\n  \"55-59\",\n  \"60-64\",\n  \"65-69\",\n  \"70-74\",\n  \"75-79\",\n  \"80+\")\n\ngh_data&lt;-\n  gh_data|&gt;\n  mutate(genhealth_num=map_dbl(genhlth,~which(.==gh_levels)))\n\n\n# Define UI for app that draws a histogram ----\nui &lt;- fluidPage(\n  titlePanel(\"Self-rated health by age and education\"),\n  # Sidebar layout with input and output definitions ----\n  sidebarLayout(\n    \n    # Sidebar panel for inputs ----\n    sidebarPanel(\n      \n      # Input: check boxes for the education levels to include\n      checkboxGroupInput(\n        \"educa\",\n        \"Education levels\",\n        c(\n          # \"Kindgarten or less\",\n          # \"Grades 1-8\",\n          # \"Grades 9-11\",\n          \"Less than high school\",\n          \"High school or GED\",\n          \"Some college\",\n          \"College or more\" \n        )\n      ),\n      radioButtons(\n        \"health_cut\",\n        \"Cutoff for health\",\n        choices=gh_levels\n      )\n      \n    ),\n    \n    # Main panel for displaying outputs ----\n    mainPanel(\n      # \n      # # Output: Histogram ----\n      # ,\n      textOutput(\"selected_vars\"),\n     \n      tabsetPanel(\n                 tabPanel(\"Distribution of health\",plotOutput(outputId = \"distPlot\")),\n                 tabPanel(\"Mean health by age\",plotOutput(outputId = \"meanPlot\")),\n                 tabPanel(\"Mean health by age and education\",plotOutput(outputId = \"mean_by_EdPlot\")),\n                 tabPanel(\"Table\",tableOutput(outputId = \"table\"))\n      )\n      \n      \n       \n    )\n  )\n)\n\n# Define server logic required to draw a histogram ----\nserver &lt;- function(input, output) {\n  \n  # This expression that generates a histogram is wrapped in a call\n  # to renderPlot to indicate that:\n  #\n  # 1. It is \"reactive\" and therefore should be automatically\n  #    re-executed when inputs (input$bins) change\n  # 2. Its output type is a plot\n  output$distPlot &lt;- renderPlot({\n    \n    d&lt;-gh_data\n    \n    if(paste(input$educa,collapse=\", \") != \"\") {\n      d&lt;-\n        d|&gt;filter(educa %in% input$educa)\n    }\n    \n    d&lt;-\n      d|&gt;\n      summarize(n=sum(n),.by=c(genhlth,`_ageg5yr`))|&gt;\n      mutate(p=prop.table(n),.by=`_ageg5yr`)\n    \n    ggplot(d,\n           aes(x=`_ageg5yr`,y=p,\n               fill=factor(genhlth,levels=gh_levels)\n           )\n           )+\n      geom_col()+\n      guides(fill=guide_legend(title=element_blank(),position = \"bottom\"))+\n      xlab(\"Age\")+ylab(\"Proportion\")+\n      scale_y_continuous(limits=c(0,NA))\n    \n  })\n  \n  output$meanPlot &lt;- renderPlot({\n    \n    d&lt;-gh_data\n    \n    if(paste(input$educa,collapse=\", \") != \"\") {\n      d&lt;-\n        d|&gt;filter(educa %in% input$educa)\n    }\n    \n    d&lt;-\n      d|&gt;\n      mutate(\n        g=genhealth_num&lt;=\n          which(input$health_cut==gh_levels)\n      )|&gt;\n      summarize(n=sum(n),.by=c(g,`_ageg5yr`))|&gt;\n      mutate(p=prop.table(n),.by=`_ageg5yr`)|&gt;\n      filter(g)\n\n    ggplot(d,\n           aes(x=factor(`_ageg5yr`,levels=age5yr),y=p, group=g\n               )\n           )+\n      geom_point()+\n      geom_line()+\n      xlab(\"Age\")+ylab(\"Proportion\")+\n      scale_y_continuous(limits=c(0,NA))\n    \n  })\n  \n  output$mean_by_EdPlot &lt;- renderPlot({\n    \n    d&lt;-gh_data\n    \n    if(paste(input$educa,collapse=\", \") != \"\") {\n      d&lt;-\n        d|&gt;filter(educa %in% input$educa)\n    }\n    \n    d&lt;-\n      d|&gt;\n      mutate(\n        g=genhealth_num&lt;=\n          which(input$health_cut==gh_levels)\n      )|&gt;\n      summarize(n=sum(n),.by=c(g,`_ageg5yr`,educa))|&gt;\n      mutate(p=prop.table(n),.by=`_ageg5yr`,educa)|&gt;\n      filter(g)\n\n    ggplot(d,\n           aes(x=factor(`_ageg5yr`,levels=age5yr),y=p, color=factor(educa,levels=educa_levels), group=factor(educa,levels=educa_levels)\n               )\n           )+\n      geom_point()+\n      geom_line()+\n      guides(color=guide_legend(title=element_blank(),position = \"bottom\"))+\n      xlab(\"Age\")+ylab(\"Proportion\")+\n      scale_y_continuous(limits=c(0,NA))\n    \n  })\n  \n  output$table=renderTable({\n    d&lt;-gh_data\n    \n    if(paste(input$educa,collapse=\", \") != \"\") {\n      d&lt;-\n        d|&gt;filter(educa %in% input$educa)\n    }\n    \n    d&lt;-\n      d|&gt;\n      summarize(n=sum(n),.by=c(genhlth,`_ageg5yr`))|&gt;\n      mutate(p=prop.table(n),.by=`_ageg5yr`)|&gt;\n      select(name=genhlth,`_ageg5yr`,value=p)|&gt;\n      tidyr::pivot_wider()|&gt;\n      select(\n        Age=`_ageg5yr`,\n        any_of(gh_levels)\n      )\n    \n    return(d)\n      \n  }\n  )\n  \n  output$selected_vars&lt;-renderText((\n    paste(input$educa,collapse=\", \")\n  ))\n}\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)"
  },
  {
    "objectID": "Apps/CopyOfCounty_mortality.html",
    "href": "Apps/CopyOfCounty_mortality.html",
    "title": "County mortality",
    "section": "",
    "text": "#| standalone: true\n#| viewerHeight: 600\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(jsonify)\nlibrary(ggplot2)\n\n\nmessage(\"Reading CHR data\")\nurl2&lt;- \"https://raw.githubusercontent.com/andersen-hecon/empirical_health_econ/main/Datasets/chr_county_metrics_2024.csv\"\ndf &lt;- readr::read_csv(url2)\n\nmessage(\"Reading counties\")\ncounties&lt;-\n  sf::read_sf(\"https://raw.githubusercontent.com/andersen-hecon/empirical_health_econ/main/Datasets/geojson-counties-fips.json\")\n\nmeasures=unique(df$measure)\n\nmessage(\"Merging counties\")\n\ncounties_df&lt;-\n  counties|&gt;\n  inner_join(tidyr::pivot_wider(df,names_from = measure),by=join_by(id==fips_code))\n\nmessage(\"Starting\")\n\nui &lt;- fluidPage(\n  titlePanel(\"Self-rated health by age and education\"),\n  # Sidebar layout with input and output definitions ----\n  sidebarLayout(\n    \n    # Sidebar panel for inputs ----\n    sidebarPanel(\n      selectInput(\n        \"measure\",\n        \"What measure do you want to see?\",\n        measures\n      )\n\n    ),\n    \n    # Main panel for displaying outputs ----\n    mainPanel(\n      # \n      # # Output: Histogram ----\n      # ,\n      # tabsetPanel(\n      #            tabPanel(\"Distribution of health\",plotOutput(outputId = \"distPlot\")),\n      #            tabPanel(\"Mean health by age\",plotOutput(outputId = \"meanPlot\")),\n      #            tabPanel(\"Mean health by age and education\",plotOutput(outputId = \"mean_by_EdPlot\")),\n      #            tabPanel(\"Table\",tableOutput(outputId = \"table\"))\n      # )\n      plotOutput(outputId = \"map\")\n      \n       \n    )\n  )\n)\n\n# Define server logic required to draw a histogram ----\nserver &lt;- function(input, output) {\n  output$map &lt;- renderPlot({\n\n    ggplot(counties_df,\n           aes(fill=input$measure\n           )\n           )+\n      geom_col()+\n      guides(fill=guide_legend(title=element_blank(),position = \"bottom\"))\n    # +\n    #   xlab(\"Age\")+ylab(\"Proportion\")+\n    #   scale_y_continuous(limits=c(0,NA))\n    \n  })\n  \n  # output$meanPlot &lt;- renderPlot({\n  #   \n  #   d&lt;-gh_data\n  #   \n  #   if(paste(input$educa,collapse=\", \") != \"\") {\n  #     d&lt;-\n  #       d|&gt;filter(educa %in% input$educa)\n  #   }\n  #   \n  #   d&lt;-\n  #     d|&gt;\n  #     mutate(\n  #       g=genhealth_num&lt;=\n  #         which(input$health_cut==gh_levels)\n  #     )|&gt;\n  #     summarize(n=sum(n),.by=c(g,`_ageg5yr`))|&gt;\n  #     mutate(p=prop.table(n),.by=`_ageg5yr`)|&gt;\n  #     filter(g)\n  # \n  #   ggplot(d,\n  #          aes(x=factor(`_ageg5yr`,levels=age5yr),y=p, group=g\n  #              )\n  #          )+\n  #     geom_point()+\n  #     geom_line()+\n  #     xlab(\"Age\")+ylab(\"Proportion\")+\n  #     scale_y_continuous(limits=c(0,NA))\n  #   \n  # })\n  # \n  # output$mean_by_EdPlot &lt;- renderPlot({\n  #   \n  #   d&lt;-gh_data\n  #   \n  #   if(paste(input$educa,collapse=\", \") != \"\") {\n  #     d&lt;-\n  #       d|&gt;filter(educa %in% input$educa)\n  #   }\n  #   \n  #   d&lt;-\n  #     d|&gt;\n  #     mutate(\n  #       g=genhealth_num&lt;=\n  #         which(input$health_cut==gh_levels)\n  #     )|&gt;\n  #     summarize(n=sum(n),.by=c(g,`_ageg5yr`,educa))|&gt;\n  #     mutate(p=prop.table(n),.by=`_ageg5yr`,educa)|&gt;\n  #     filter(g)\n  # \n  #   ggplot(d,\n  #          aes(x=factor(`_ageg5yr`,levels=age5yr),y=p, color=factor(educa,levels=educa_levels), group=factor(educa,levels=educa_levels)\n  #              )\n  #          )+\n  #     geom_point()+\n  #     geom_line()+\n  #     guides(color=guide_legend(title=element_blank(),position = \"bottom\"))+\n  #     xlab(\"Age\")+ylab(\"Proportion\")+\n  #     scale_y_continuous(limits=c(0,NA))\n  #   \n  # })\n  # \n  # output$table=renderTable({\n  #   d&lt;-gh_data\n  #   \n  #   if(paste(input$educa,collapse=\", \") != \"\") {\n  #     d&lt;-\n  #       d|&gt;filter(educa %in% input$educa)\n  #   }\n  #   \n  #   d&lt;-\n  #     d|&gt;\n  #     summarize(n=sum(n),.by=c(genhlth,`_ageg5yr`))|&gt;\n  #     mutate(p=prop.table(n),.by=`_ageg5yr`)|&gt;\n  #     select(name=genhlth,`_ageg5yr`,value=p)|&gt;\n  #     tidyr::pivot_wider()|&gt;\n  #     select(\n  #       Age=`_ageg5yr`,\n  #       any_of(gh_levels)\n  #     )\n  #   \n  #   return(d)\n  #     \n  # }\n  # )\n  # \n  # output$selected_vars&lt;-renderText((\n  #   paste(input$educa,collapse=\", \")\n  # ))\n}\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)"
  }
]